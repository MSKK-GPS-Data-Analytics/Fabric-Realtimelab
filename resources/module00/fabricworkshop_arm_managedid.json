{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "variables": {
        "WHO_vars": "600|100|1200|.04|0.9|0.01|60|0.4|0.510|0.505|0.500|0.484|0.442|0.08",
        "WHAT_vars": "500|50|1050|.04|0.8|0.01|60|0.4|0.510|0.502|0.500|0.481|0.442|0.07",
        "IDK_vars": "500|100|1100|.04|0.9|0.01|60|0.4|0.535|0.540|0.520|0.500|0.475|0.065",
        "WHY_vars": "550|25|1200|.04|0.9|0.01|60|0.4|0.515|0.515|0.503|0.480|0.442|-0.02",
        "BCUZ_vars": "300|5|950|.03|0.7|0.01|60|0.4|0.520|0.510|0.505|0.500|0.465|0.06",
        "TMRW_vars": "500|50|1100|.07|1.0|0.01|60|0.4|0.530|0.520|0.515|0.502|0.430|0.052",
        "TDY_vars": "700|225|1250|.07|1.0|0.01|60|0.4|0.530|0.520|0.515|0.502|0.430|0.02",
        "IDGD_vars": "500|50|1050|.04|0.8|0.01|60|0.4|0.503|0.500|0.496|0.492|0.451|0.055",
        "events":"{\"events\": [{\"type\": \"periodic\", \"name\": \"900-up\", \"frequency\":900, \"increasechance\":1.0, \"duration\": 60, \"modifier\": 0.5},{\"type\": \"periodic\", \"name\": \"5220-down\", \"frequency\":5220, \"increasechance\":0.0, \"duration\": 30, \"modifier\": 0.5},{\"type\": \"random\", \"name\": \"Rando1\", \"frequency\": 0.003, \"increasechance\": 0.504, \"duration\": 30, \"modifier\": 0.4}]}",
        "timers":"{\"timers\": [{\"name\": \"Workdays\", \"start\":\"08:00:00\", \"end\":\"18:00:00\", \"days\":\"0|1|2|3|4\", \"months\": \"1|2|3|4|5|6|7|8|9|10|11|12\", \"modifier\":0.0004, \"appliedTo\": \"WHO|WHAT|IDK|WHY|BCUZ|TMRW|TDY|IDGD\"}, {\"name\": \"Evening Decline\", \"start\":\"22:00:00\", \"end\":\"23:59:59\", \"days\":\"0|1|2|3|4|5|6\", \"months\": \"1|2|3|4|5|6|7|8|9|10|11|12\", \"modifier\":-0.03, \"appliedTo\": \"WHO|WHAT|IDK|WHY|IDGD\"}, {\"name\": \"Morning Rise\", \"start\":\"04:00:00\", \"end\":\"06:00:00\", \"days\":\"0|1|2|3|4|5|6\", \"months\": \"1|2|3|4|5|6|7|8|9|10|11|12\", \"modifier\":0.0003, \"appliedTo\": \"WHO|WHAT|IDK|WHY|BCUZ|TMRW|TDY|IDGD\"}, {\"name\": \"ET Business Hours MWF\", \"start\":\"14:00:00\", \"end\":\"22:00:00\", \"days\":\"0|2|4\", \"months\": \"1|2|3|4|5|6|7|8|9|10|11|12\", \"modifier\":0.04, \"appliedTo\": \"WHO|WHAT|WHY\"}, {\"name\": \"WHO Fridays\", \"start\":\"14:00:00\", \"end\":\"22:00:00\", \"days\":\"4\", \"months\": \"1|2|3|4|5|6|7|8|9|10|11|12\", \"modifier\":-0.06, \"appliedTo\": \"WHO\"}, {\"name\": \"GMT Business Hours M-F\", \"start\":\"08:00:00\", \"end\":\"17:00:00\", \"days\":\"0|1|2|3|4\", \"months\": \"1|2|3|4|5|6|7|8|9|10|11|12\", \"modifier\":0.015, \"appliedTo\": \"TMRW|TDY\"},  {\"name\": \"Weekend Slide\", \"start\":\"00:00:00\", \"end\":\"23:59:59\", \"days\":\"5|6\", \"months\": \"1|2|3|4|5|6|7|8|9|10|11|12\", \"modifier\":-0.012, \"appliedTo\": \"TMRW|TDY\"}, {\"name\": \"GMT Business Hours M\", \"start\":\"07:00:00\", \"end\":\"18:00:00\", \"days\":\"0\", \"months\": \"1|2|3|4|5|6|7|8|9|10|11|12\", \"modifier\":0.025, \"appliedTo\": \"TMRW|TDY\"}, {\"name\": \"Lunch Slump\", \"start\":\"12:00:00\", \"end\":\"13:00:00\", \"days\":\"0|1|2|3|4\", \"months\": \"1|2|3|4|5|6|7|8|9|10|11|12\", \"modifier\":-0.01, \"appliedTo\": \"WHO|WHAT|IDK|WHY|IDGD\"}, {\"name\": \"Hour of Darkness\", \"start\":\"01:00:00\", \"end\":\"02:00:00\", \"days\":\"0|1|2|3|4|5|6\", \"months\": \"1|2|3|4|5|6|7|8|9|10|11|12\", \"modifier\":-0.055, \"appliedTo\": \"IDGD\"}, {\"name\": \"Happy Wednesdays\", \"start\":\"01:00:00\", \"end\":\"23:00:00\", \"days\":\"2\", \"months\": \"1|2|3|4|5|6|7|8|9|10|11|12\", \"modifier\":0.035, \"appliedTo\": \"IDGD\"}, {\"name\": \"BCUZ Weekends\", \"start\":\"00:00:00\", \"end\":\"23:59:59\", \"days\":\"5|6\", \"months\": \"1|2|3|4|5|6|7|8|9|10|11|12\", \"modifier\":0.026, \"appliedTo\": \"BCUZ\"}]}",
        "stockdebuginfo": "0",
        "printonlyerrors": "0",
        "usegrowthrate": "1",
        "useManagedIdentity": "1",
        "containerName": "stockgenerator",
        "eventHubName": "stockeventhub",
        "location": "[resourceGroup().location]",
        "randomString": "[substring(guid(resourceGroup().id), 0, 6)]",
        "namespaceName": "fabricworkshop",
        "fullnamespace": "[format('ehns-{0}-{1}', variables('randomString'), variables('namespaceName'))]",
        "eventHubFQNS": "[format('{0}.servicebus.windows.net', variables('fullnamespace'))]",
        "fullcontainername": "[format('aci-{0}-{1}', variables('randomString'), variables('containerName'))]",
        "defaultSASKeyName": "stockeventhub_sas"
    },
    "resources": [
        {
            "type": "Microsoft.EventHub/namespaces",
            "apiVersion": "2022-10-01-preview",
            "name": "[variables('fullnamespace')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "Basic",
                "tier": "Basic",
                "capacity": 1
            },
            "properties": {
                "minimumTlsVersion": "1.2",
                "publicNetworkAccess": "Enabled",
                "disableLocalAuth": false,
                "zoneRedundant": true,
                "isAutoInflateEnabled": false,
                "maximumThroughputUnits": 0,
                "kafkaEnabled": false
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/authorizationrules",
            "apiVersion": "2022-10-01-preview",
            "name": "[format('{0}/{1}', variables('fullnamespace'), variables('defaultSASKeyName'))]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', variables('fullnamespace'))]"
            ],
            "properties": {
                "rights": [
                    "Listen",
                    "Send"
                ]
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs",
            "apiVersion": "2022-10-01-preview",
            "name": "[format('{0}/{1}', variables('fullnamespace'), variables('eventHubName'))]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', variables('fullnamespace'))]"
            ],
            "properties": {
                "retentionDescription": {
                    "cleanupPolicy": "Delete",
                    "retentionTimeInHours": 1
                },
                "messageRetentionInDays": 1,
                "partitionCount": 2,
                "status": "Active"
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/networkrulesets",
            "apiVersion": "2022-10-01-preview",
            "name": "[format('{0}/default', variables('fullnamespace'))]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', variables('fullnamespace'))]"
            ],
            "properties": {
                "publicNetworkAccess": "Enabled",
                "defaultAction": "Allow",
                "virtualNetworkRules": [],
                "ipRules": [],
                "trustedServiceAccessEnabled": false
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "name": "[guid(resourceGroup().id, variables('fullcontainerName'))]",
            "properties": {
                "roleDefinitionId": "[concat(subscription().id, '/providers/Microsoft.Authorization/roleDefinitions/', 'f526a384-b230-433a-b45c-95f59c4a2dec')]",
                "principalId": "[reference(resourceId('Microsoft.ContainerInstance/containerGroups', variables('fullcontainerName')),'2023-05-01', 'full').identity.principalId]",
                "principalType": "ServicePrincipal",
                "scope": "[resourceGroup().id]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.ContainerInstance/containerGroups', variables('fullcontainerName'))]"
            ]
        },
        {
            "type": "Microsoft.ContainerInstance/containerGroups",
            "apiVersion": "2023-05-01",
            "name": "[variables('fullcontainerName')]",
            "location": "[variables('location')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('fullnamespace'), variables('eventHubName'))]"
            ],
            "properties": {
                "sku": "Standard",
                "containers": [
                    {
                        "name": "[variables('fullcontainerName')]",
                        "properties": {
                            "image": "realtimelab.azurecr.io/realtimegenerator:v3",
                            "ports": [
                                {
                                    "protocol": "TCP",
                                    "port": 80
                                }
                            ],
                            "environmentVariables": [
                                                                {
                                    "name": "EVENTHUBNAME",
                                    "value": "[variables('eventHubName')]"
                                },
                                {
                                    "name": "EVENTHUBCONNECTIONSTRING",
                                    "value": "NotNeededForManagedIdentity"
                                },
                                {
                                    "name": "EVENTHUBFQNS",
                                    "value": "[variables('eventHubFQNS')]"
                                },
                                {
                                    "name": "USEMANAGEDIDENTITY",
                                    "value": "[variables('useManagedIdentity')]"
                                },
                                {
                                    "name": "EVENTS",
                                    "value": "[variables('events')]"
                                },
                                {
                                    "name": "TIMERS",
                                    "value": "[variables('timers')]"
                                },
                                {
                                    "name": "WHO_vars",
                                    "value": "[variables('WHO_vars')]"
                                },
                                {
                                    "name": "WHAT_vars",
                                    "value": "[variables('WHAT_vars')]"
                                },
                                {
                                    "name": "IDK_vars",
                                    "value": "[variables('IDK_vars')]"
                                },
                                {
                                    "name": "WHY_vars",
                                    "value": "[variables('WHY_vars')]"
                                },
                                {
                                    "name": "BCUZ_vars",
                                    "value": "[variables('BCUZ_vars')]"
                                },
                                {
                                    "name": "TMRW_vars",
                                    "value": "[variables('TMRW_vars')]"
                                },
                                {
                                    "name": "TDY_vars",
                                    "value": "[variables('TDY_vars')]"
                                },
                                {
                                    "name": "IDGD_vars",
                                    "value": "[variables('IDGD_vars')]"
                                },
                                {
                                    "name": "EXTENDEDSTOCKINFO",
                                    "value": "[variables('stockdebuginfo')]"
                                },
                                {
                                    "name": "PRINTONLYERRORS",
                                    "value": "[variables('printonlyerrors')]"
                                },
                                {
                                    "name": "USEGROWTHRATE",
                                    "value": "[variables('usegrowthrate')]"
                                }
                            ],
                            "resources": {
                                "requests": {
                                    "memoryInGB": 1,
                                    "cpu": 1
                                }
                            }
                        }
                    }
                ],
                "initContainers": [],
                "restartPolicy": "OnFailure",
                "ipAddress": {
                    "ports": [
                        {
                            "protocol": "TCP",
                            "port": 80
                        }
                    ],
                    "ip": "20.14.36.176",
                    "type": "Public"
                },
                "osType": "Linux"
            }
        }
    ]
    
}